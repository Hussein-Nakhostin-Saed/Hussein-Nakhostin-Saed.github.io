"use strict";(self.webpackChunknscaptcha_docs=self.webpackChunknscaptcha_docs||[]).push([[1648],{6751:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>c,toc:()=>h});const c=JSON.parse('{"id":"i-captcha-token-cache","title":"ICaptchaTokenCache","description":"This document explains the ICaptchaTokenCache interface and how to implement it to customize the storage and retrieval of captcha tokens. This is intended for developers who need more control over how captcha tokens are handled.","source":"@site/docs/i-captcha-token-cache.md","sourceDirName":".","slug":"/i-captcha-token-cache","permalink":"/docs/i-captcha-token-cache","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"ICaptchaTokenCache"},"sidebar":"tutorialSidebar","previous":{"title":"CaptchaCookieOptions","permalink":"/docs/captcha-cookie-options"},"next":{"title":"ICaptchaTokenProtector","permalink":"/docs/i-captcha-token-protector"}}');var r=t(4848),i=t(8453);const a={sidebar_position:6,title:"ICaptchaTokenCache"},o="ICaptchaTokenCache Interface",s={},h=[{value:"<code>ICaptchaTokenCache</code> Interface Overview",id:"icaptchatokencache-interface-overview",level:2},{value:"Interface Methods",id:"interface-methods",level:2},{value:"<code>Cache(string key, string value)</code>",id:"cachestring-key-string-value",level:3},{value:"<code>Token Retrieve(string key)</code>",id:"token-retrievestring-key",level:3},{value:"<code>void Clear(string key)</code>",id:"void-clearstring-key",level:3},{value:"Implementing <code>ICaptchaTokenCache</code>",id:"implementing-icaptchatokencache",level:2},{value:"Registering Your Custom Cache",id:"registering-your-custom-cache",level:2},{value:"Important Considerations",id:"important-considerations",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsxs)(n.h1,{id:"icaptchatokencache-interface",children:[(0,r.jsx)(n.code,{children:"ICaptchaTokenCache"})," Interface"]})}),"\n",(0,r.jsxs)(n.p,{children:["This document explains the ",(0,r.jsx)(n.code,{children:"ICaptchaTokenCache"})," interface and how to implement it to customize the storage and retrieval of captcha tokens. This is intended for developers who need more control over how captcha tokens are handled."]}),"\n",(0,r.jsxs)(n.h2,{id:"icaptchatokencache-interface-overview",children:[(0,r.jsx)(n.code,{children:"ICaptchaTokenCache"})," Interface Overview"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"ICaptchaTokenCache"})," interface defines the methods required for caching captcha tokens.  Implementing this interface allows you to use different caching mechanisms, such as in-memory storage, distributed caches (Redis, Memcached), or databases.  This is crucial for scalability and performance in production environments."]}),"\n",(0,r.jsx)(n.h2,{id:"interface-methods",children:"Interface Methods"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"ICaptchaTokenCache"})," interface defines the following methods:"]}),"\n",(0,r.jsx)(n.h3,{id:"cachestring-key-string-value",children:(0,r.jsx)(n.code,{children:"Cache(string key, string value)"})}),"\n",(0,r.jsx)(n.p,{children:"This method caches a captcha token."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"key"}),": The unique key associated with the token.  This key is typically derived from the user's session or some other identifier."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"}),": The captcha token to be cached.  This is the actual value generated for the captcha challenge."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"CaptchaException"})}),":  Implementations should throw a ",(0,r.jsx)(n.code,{children:"CaptchaException"})," if an error occurs during the caching process (e.g., storage failure, invalid input)."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"token-retrievestring-key",children:(0,r.jsx)(n.code,{children:"Token Retrieve(string key)"})}),"\n",(0,r.jsx)(n.p,{children:"This method retrieves a cached captcha token."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"key"}),": The key of the token to retrieve."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The cached captcha token as a ",(0,r.jsx)(n.code,{children:"Token"})," object (or null if no token is found). The ",(0,r.jsx)(n.code,{children:"Token"})," class will likely have properties like ",(0,r.jsx)(n.code,{children:"Value"})," (the string token), and potentially a timestamp or other metadata."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"CaptchaException"})}),": Implementations should throw a ",(0,r.jsx)(n.code,{children:"CaptchaException"})," if an error occurs during retrieval (e.g., storage access failure, invalid key)."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"void-clearstring-key",children:(0,r.jsx)(n.code,{children:"void Clear(string key)"})}),"\n",(0,r.jsx)(n.p,{children:"This method removes a cached captcha token."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"key"}),": The key of the token to clear."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"CaptchaException"})}),": Implementations should throw a ",(0,r.jsx)(n.code,{children:"CaptchaException"})," if an error occurs during clearing (e.g., storage access failure, invalid key)."]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"implementing-icaptchatokencache",children:["Implementing ",(0,r.jsx)(n.code,{children:"ICaptchaTokenCache"})]}),"\n",(0,r.jsxs)(n.p,{children:["To create a custom captcha token cache, you need to create a class that implements the ",(0,r.jsx)(n.code,{children:"ICaptchaTokenCache"})," interface and provides concrete implementations for the methods described above."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Implementation (using an in-memory dictionary - for demonstration purposes only, not suitable for production):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'public class InMemoryCaptchaTokenCache : ICaptchaTokenCache\r\n{\r\n    private readonly Dictionary<string, Token> _cache = new Dictionary<string, Token>();\r\n\r\n    public void Cache(string key, string value)\r\n    {\r\n        try\r\n        {\r\n            _cache[key] = new Token { Value = value, Timestamp = DateTime.UtcNow }; // Store token with timestamp\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            throw new CaptchaException("Error caching token", ex);\r\n        }\r\n    }\r\n\r\n    public Token Retrieve(string key)\r\n    {\r\n        try\r\n        {\r\n            if (_cache.TryGetValue(key, out var token))\r\n            {\r\n                return token;\r\n            }\r\n            return null;\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            throw new CaptchaException("Error retrieving token", ex);\r\n        }\r\n    }\r\n\r\n    public void Clear(string key)\r\n    {\r\n        try\r\n        {\r\n            _cache.Remove(key);\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            throw new CaptchaException("Error clearing token", ex);\r\n        }\r\n    }\r\n}\r\n\r\n// Example Token class\r\npublic class Token\r\n{\r\n    public string Value { get; set; }\r\n    public DateTime Timestamp { get; set; } // Add a timestamp\r\n    // ... other metadata\r\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"registering-your-custom-cache",children:"Registering Your Custom Cache"}),"\n",(0,r.jsxs)(n.p,{children:["After implementing ",(0,r.jsx)(n.code,{children:"ICaptchaTokenCache"}),", you need to register it with your application's service collection.  Use the ",(0,r.jsx)(n.code,{children:"AddCaptchaTokenCacheService"})," method in your ",(0,r.jsx)(n.code,{children:"Program.cs"})," (for .NET 6 and later) or ",(0,r.jsx)(n.code,{children:"Startup.cs"})," (for older ASP.NET versions):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"builder.Services.AddCaptcha(options => { /* ... captcha options ... */ })\r\n       .AddCaptchaTokenCacheService<InMemoryCaptchaTokenCache>(); // Register your custom cache\n"})}),"\n",(0,r.jsxs)(n.p,{children:['This will register your custom implementation with the key "TokenCache", overriding the default ',(0,r.jsx)(n.code,{children:"InMemoryCaptchaTokenCacheService"})," if you haven't implemented it manually."]}),"\n",(0,r.jsx)(n.h2,{id:"important-considerations",children:"Important Considerations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Production-Ready Cache:"})," The in-memory example provided is not suitable for production environments. In a production setting, you should use a distributed cache (like Redis or Memcached) or a database for storing captcha tokens. In-memory storage is lost when the application restarts or scales horizontally."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CaptchaException:"}),"  It is crucial to handle potential exceptions during caching, retrieval, and clearing and wrap them in a ",(0,r.jsx)(n.code,{children:"CaptchaException"}),". This provides a consistent way for the captcha library to handle errors."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Token Class:"})," The example ",(0,r.jsx)(n.code,{children:"Token"})," class includes a ",(0,r.jsx)(n.code,{children:"Timestamp"}),". This is highly recommended to implement a time-based expiration for your captcha tokens. You can then check the timestamp in your ",(0,r.jsx)(n.code,{children:"Retrieve"})," method to ensure the token hasn't expired."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Key Design:"})," Carefully design the keys you use for caching. They should be unique and ideally related to the user's session or request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security:"})," Ensure that your caching mechanism is secure and protected from unauthorized access. If you're using a distributed cache or database, follow security best practices for those systems."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dependency Injection:"})," Ensure that your custom ",(0,r.jsx)(n.code,{children:"ICaptchaTokenCache"})," implementation is properly registered with your dependency injection container."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"By following these guidelines, you can effectively implement and use a custom captcha token cache that meets the specific requirements of your application.  Remember to choose a caching mechanism that is appropriate for your environment and prioritize security best practices."})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var c=t(6540);const r={},i=c.createContext(r);function a(e){const n=c.useContext(i);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),c.createElement(i.Provider,{value:n},e.children)}}}]);